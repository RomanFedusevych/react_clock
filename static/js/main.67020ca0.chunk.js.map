{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timer","this","setInterval","setState","console","log","prevProps","previousName","name","currentName","props","clearInterval","React","Component","App","isClockVisible","clockName","clockRandomNames","randomNumbers","Math","floor","random","showClock","hideClock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,WALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,MAAQE,aAAY,WACvB,IAAML,GAAO,IAAIC,MAAOC,qBAExB,EAAKI,SAAS,CACZN,SAGFO,QAAQC,IAAIR,KACX,OAhBP,gCAmBE,SAAmBS,GACjB,IAAcC,EAAiBD,EAAvBE,KACMC,EAAgBR,KAAKS,MAA3BF,KAEJD,IAAiBE,GAEnBL,QAAQC,IAAR,qCAA0CE,EAA1C,eAA6DE,MAzBnE,kCA6BE,WACMR,KAAKD,OACPW,cAAcV,KAAKD,SA/BzB,oBAmCE,WACE,IAAQH,EAASI,KAAKL,MAAdC,KACAW,EAASP,KAAKS,MAAdF,KAER,OACE,qCACE,6BAAKA,IACL,oDAAqBX,YA1C7B,GAA2Be,IAAMC,WC+DlBC,E,4MA9DblB,MAAe,CACbmB,gBAAgB,EAChBC,UAAW,e,EAGbC,iBAAmB,WACjB,IAAMC,EAAgBC,KAAKC,MAAsB,IAAhBD,KAAKE,UAEtC,MAAM,eAAN,OAAsBH,I,EAGxBI,UAAY,WACV,EAAKnB,SAAS,CAAEY,gBAAgB,K,EAGlCQ,UAAY,WACV,EAAKpB,SAAS,CAAEY,gBAAgB,K,4CAGlC,WAAU,IAAD,OACP,EAAsCd,KAAKL,MAAnCmB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKQ,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SACGT,GACC,cAAC,EAAD,CAAOP,KAAMQ,MAIjB,sBAAKQ,UAAU,eAAf,UACE,wBACEA,UAAU,kBACVC,KAAK,SACLC,QAASzB,KAAKqB,UAHhB,wBAQA,wBACEE,UAAU,kBACVC,KAAK,SACLC,QAAS,WACP,EAAKvB,SAAS,CAAEa,UAAW,EAAKC,sBAJpC,6BAUA,wBACEO,UAAU,iBACVC,KAAK,SACLC,QAASzB,KAAKsB,UAHhB,kC,GAlDQX,IAAMC,WCPxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.67020ca0.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  date: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  timer: undefined | NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      const date = new Date().toLocaleTimeString();\n\n      this.setState({\n        date,\n      });\n      // eslint-disable-next-line\n      console.log(date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name: previousName } = prevProps;\n    const { name: currentName } = this.props;\n\n    if (previousName !== currentName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${previousName} to ${currentName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <>\n        <h1>{name}</h1>\n        <p>{`Current time: ${date}`}</p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: string;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 'React clock',\n  };\n\n  clockRandomNames = () => {\n    const randomNumbers = Math.floor(Math.random() * 1000);\n\n    return `React clock ${randomNumbers}`;\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__clock\">\n          {isClockVisible && (\n            <Clock name={clockName} />\n          )}\n        </div>\n\n        <div className=\"App__buttons\">\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            onClick={this.showClock}\n          >\n            Show clock\n          </button>\n\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({ clockName: this.clockRandomNames() });\n            }}\n          >\n            Set random name\n          </button>\n\n          <button\n            className=\"btn btn-danger\"\n            type=\"button\"\n            onClick={this.hideClock}\n          >\n            Hide clock\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}